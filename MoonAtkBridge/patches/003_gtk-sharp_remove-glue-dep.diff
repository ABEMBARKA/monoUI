Index: atk/Misc.custom
===================================================================
--- atk/Misc.custom	(revision 142361)
+++ atk/Misc.custom	(working copy)
@@ -21,11 +21,8 @@
 // Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 // Boston, MA 02111-1307, USA.
 
-		[DllImport("atksharpglue-3")]
-		static extern void atksharp_misc_set_singleton_instance (IntPtr misc);
-		
 		public static void SetSingletonInstance (Misc misc)
 		{
-			atksharp_misc_set_singleton_instance (misc.Handle);
+			throw new NotSupportedException ("This method requires glue which is not shipped by the Moonlight Atk Bridge");
 		}
 
Index: atk/Util.custom
===================================================================
--- atk/Util.custom	(revision 142361)
+++ atk/Util.custom	(working copy)
@@ -22,84 +22,23 @@
 // Boston, MA 02111-1307, USA.
 
 
-		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
-		delegate uint AddGlobalEventListenerNativeDelegate (GLib.Signal.EmissionHookNative hook, IntPtr event_type);
-                
-		static AddGlobalEventListenerDelegate add_global_event_listener_handler;
-		static AddGlobalEventListenerNativeDelegate add_global_event_listener_callback;
-
-		static uint AddGlobalEventListenerCallback (GLib.Signal.EmissionHookNative hook, IntPtr event_type)
-		{
-			try {
-				return add_global_event_listener_handler (new GLib.Signal.EmissionHookMarshaler (hook, IntPtr.Zero).Invoker, GLib.Marshaller.Utf8PtrToString (event_type));
-			} catch (Exception e) {
-				GLib.ExceptionManager.RaiseUnhandledException (e, false);
-			}
-			return 0;
-		}
-
 		public delegate uint AddGlobalEventListenerDelegate (GLib.Signal.EmissionHook hook, string event_type);
 
-		[DllImport("atksharpglue-3")]
-		static extern void atksharp_util_override_add_global_event_listener (AddGlobalEventListenerNativeDelegate cb);
 		public static AddGlobalEventListenerDelegate AddGlobalEventListenerHandler {
 			set {
-				add_global_event_listener_handler = value;
-				if (add_global_event_listener_callback == null)
-					add_global_event_listener_callback = new AddGlobalEventListenerNativeDelegate (AddGlobalEventListenerCallback);
-				atksharp_util_override_add_global_event_listener (add_global_event_listener_callback);
+				throw new NotSupportedException ("This method requires glue which is not shipped by the Moonlight Atk Bridge");
 			}
 		}
-
-		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
-		delegate void RemoveListenerNativeDelegate (uint listener_id);
-
-		static RemoveListenerDelegate remove_global_event_listener_handler;
-		static RemoveListenerNativeDelegate remove_global_event_listener_callback;
-
-		static void RemoveGlobalEventListenerCallback (uint listener_id)
-		{
-			try {
-				remove_global_event_listener_handler (listener_id);
-			} catch (Exception e) {
-				GLib.ExceptionManager.RaiseUnhandledException (e, false);
-			}
-		}
-
-		[DllImport("atksharpglue-3")]
-		static extern void atksharp_util_override_remove_global_event_listener (RemoveListenerNativeDelegate cb);
-		
 		public delegate void RemoveListenerDelegate (uint listener_id);
 
 		public static RemoveListenerDelegate RemoveGlobalEventListenerHandler {
 			set {
-				remove_global_event_listener_handler = value;
-				if (remove_global_event_listener_callback == null)
-					remove_global_event_listener_callback = new RemoveListenerNativeDelegate (RemoveGlobalEventListenerCallback);
-				atksharp_util_override_remove_global_event_listener (remove_global_event_listener_callback);
+				throw new NotSupportedException ("This method requires glue which is not shipped by the Moonlight Atk Bridge");
 			}
 		}
 
-		static RemoveListenerDelegate remove_key_event_listener_handler;
-		static RemoveListenerNativeDelegate remove_key_event_listener_callback;
-
-		static void RemoveKeyEventListenerCallback (uint listener_id)
-		{
-			try {
-				remove_key_event_listener_handler (listener_id);
-			} catch (Exception e) {
-				GLib.ExceptionManager.RaiseUnhandledException (e, false);
-			}
-		}
-
-		[DllImport("atksharpglue-3")]
-		static extern void atksharp_util_override_remove_key_event_listener (RemoveListenerNativeDelegate cb);
-		
 		public static RemoveListenerDelegate RemoveKeyEventListenerHandler {
 			set {
-				remove_key_event_listener_handler = value;
-				if (remove_key_event_listener_callback == null)
-					remove_key_event_listener_callback = new RemoveListenerNativeDelegate (RemoveKeyEventListenerCallback);
-				atksharp_util_override_remove_key_event_listener (remove_key_event_listener_callback);
+				throw new NotSupportedException ("This method requires glue which is not shipped by the Moonlight Atk Bridge");
 			}
 		}
Index: glib/Thread.cs
===================================================================
--- glib/Thread.cs	(revision 142361)
+++ glib/Thread.cs	(working copy)
@@ -36,13 +36,12 @@
 			g_thread_init (IntPtr.Zero);
 		}
 
-		[DllImport("glibsharpglue-3")]
-		static extern bool glibsharp_g_thread_supported ();
-
 		public static bool Supported
 		{
 			get {
-				return glibsharp_g_thread_supported ();
+				// g_thread_init will be called by Mono, so in
+				// Moonlight, we will always return True.
+				return true;
 			}
 		}
 	}
