Index: class/System.Windows/Assembly/AssemblyInfo.cs
===================================================================
--- class/System.Windows/Assembly/AssemblyInfo.cs	(revision 136130)
+++ class/System.Windows/Assembly/AssemblyInfo.cs	(working copy)
@@ -101,3 +101,6 @@
 [assembly: InternalsVisibleTo ("System.Windows.Browser, PublicKey=002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df")]
 [assembly: InternalsVisibleTo ("Moonlight.Gtk, PublicKey=002400000480000094000000060200000024000052534131000400001100000005E62DA51722818A2ADC73D5CE64289260012A442031582E808F5C290EF155F10AB93441F92A7A59736D3481245ED4E0E864F5E1ACCADD217D53EE0263E6E3852FE94AB6B708984C6C69BA79F40A0896E1FFF820B7C55D4968C8F41CAE2AABC136B16B8AF83D013946CE190BC03C2A6C8DE8C0CB135ED656F46BF9A2D03E8188")]
 #endif
+#if MOON_A11Y_INTERNAL_HACK
+[assembly: InternalsVisibleTo ("MoonAtkBridge, PublicKey=00240000048000009400000006020000002400005253413100040000110000004bb98b1af6c1df0df8c02c380e116b7a7f0c8c827aecfccddc6e29b7c754cd608b49dfcef4df9699ad182e50f66afa4e68dabc7b6aeeec0aa4719a5f8e0aae8c193080a706adc3443a8356b1f254142034995532ac176398e12a30f6a74a119a89ac47672c9ae24d7e90de686557166e3b873cd707884431a0451d9d6f7fe795")]
+#endif
Index: class/System.Windows/Assembly/ChangeLog
===================================================================
--- class/System.Windows/Assembly/ChangeLog	(revision 136130)
+++ class/System.Windows/Assembly/ChangeLog	(working copy)
@@ -1,3 +1,9 @@
+2009-05-29  Brad Taylor  <brad@getcoded.net>
+
+	* AssemblyInfo.cs: Add InternalsVisibleTo for the Moonlight
+	Accessibility bridge, but only if the temporary MOON_A11Y_INTERNAL_HACK
+	environment variable is set.
+
 2009-04-03  Aaron Bockover  <abockover@novell.com>
 
 	* AssemblyInfo.cs: gtksilver -> Moonlight.Gtk
Index: class/System.Windows/ChangeLog
===================================================================
--- class/System.Windows/ChangeLog	(revision 136130)
+++ class/System.Windows/ChangeLog	(working copy)
@@ -1,3 +1,10 @@
+2009-05-29  Brad Taylor  <brad@getcoded.net>
+
+	* Makefile.am: Define MOON_A11Y_INTERNAL_HACK as a temporary workaround
+	until security audit is completed.
+
 2009-06-04  Chris Toshok  <toshok@ximian.com>
 
 	* Makefile.am (system_windows_sources): add MoonException.cs
Index: class/System.Windows/System.Windows.mdp
===================================================================
--- class/System.Windows/System.Windows.mdp	(revision 136130)
+++ class/System.Windows/System.Windows.mdp	(working copy)
@@ -458,6 +458,7 @@
     <File name="System.Windows.Media.Animation/QuinticEase.cs" subtype="Code" buildaction="Compile" />
     <File name="System.Windows.Media.Animation/SineEase.cs" subtype="Code" buildaction="Compile" />
     <File name="Mono/EasingFunctionWrapper.cs" subtype="Code" buildaction="Compile" />
+    <File name="Mono/A11yHelper.cs" subtype="Code" buildaction="Compile" />
     <File name="System.Windows.Interop/PluginHost.cs" subtype="Code" buildaction="Compile" />
     <File name="System.Windows.Automation.Peers/ButtonAutomationPeer.cs" subtype="Code" buildaction="Compile" />
     <File name="System.Windows.Automation.Peers/ButtonBaseAutomationPeer.cs" subtype="Code" buildaction="Compile" />
@@ -514,4 +515,4 @@
     <ProjectReference type="Gac" localcopy="True" refto="System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
     <ProjectReference type="Gac" localcopy="True" refto="System.Core" />
   </References>
-</Project>
\ No newline at end of file
+</Project>
Index: class/System.Windows/Mono/A11yHelper.cs
===================================================================
--- class/System.Windows/Mono/A11yHelper.cs	(revision 0)
+++ class/System.Windows/Mono/A11yHelper.cs	(revision 0)
@@ -0,0 +1,72 @@
+using System;
+using System.IO;
+using System.Reflection;
+
+namespace Mono {
+
+	internal static class A11yHelper {
+
+		private const string BRIDGE_ASM_NAME = "MoonAtkBridge.dll";
+		private const string BRIDGE_FULL_NAME = "Moonlight.AtkBridge.AutomationBridge";
+
+		internal static void Initialize ()
+		{
+			string current_assembly_location = Assembly.GetExecutingAssembly ().Location;
+			string load_location = Path.Combine (Path.GetDirectoryName (current_assembly_location), BRIDGE_ASM_NAME);
+			if (File.Exists (load_location)) {
+				Launch (load_location);
+				return;
+			}
+
+			int pos = current_assembly_location.IndexOf ("moonlight@novell");
+			if (pos > 0) {
+				load_location = Path.Combine (current_assembly_location.Substring (0, pos), "moonlight-a11y@novell.com");
+				if (Directory.Exists (load_location)) {
+					load_location = Path.Combine (Path.Combine (load_location, "components"), BRIDGE_ASM_NAME);
+					Launch (load_location);
+				}
+			}
+		}
+
+		internal static void Launch (string location)
+		{
+			Assembly bridge_asm;
+			try {
+				bridge_asm = Assembly.LoadFrom (location);
+			} catch (Exception e) {
+				return;
+			}
+
+
+			bridge_type = bridge_asm.GetType (BRIDGE_FULL_NAME);
+			if (bridge_type == null)
+				return;
+
+			//we cannot use InvokeMember because it's filtered by the SecurityCLR (simply because the moon team is not using it)
+			automation_bridge = bridge_type.GetMethod (
+				"CreateAutomationBridge",
+				BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.InvokeMethod)
+				.Invoke (null, null);
+
+			accessibilityEnabled = (bool) bridge_type.GetMethod (
+				"IsAccessibilityEnabled",
+				BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.InvokeMethod)
+				.Invoke (null, null);
+		}
+		
+		private static Type bridge_type;
+		private static object automation_bridge;
+		private static bool accessibilityEnabled = false;
+		
+		public static IntPtr GetAccessible ()
+		{
+			if (!accessibilityEnabled || automation_bridge == null)
+				return IntPtr.Zero;
+
+			return (IntPtr) bridge_type.GetMethod (
+				"GetAccessibleHandle",
+				BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.InvokeMethod)
+				.Invoke (automation_bridge, null);
+		}
+	}
+}
Index: class/System.Windows/Mono/ApplicationLauncher.cs
===================================================================
--- class/System.Windows/Mono/ApplicationLauncher.cs	(revision 136130)
+++ class/System.Windows/Mono/ApplicationLauncher.cs	(working copy)
@@ -44,6 +44,11 @@
 	/// </summary>	
 	class ApplicationLauncher {
 
+		static ApplicationLauncher ()
+		{
+			A11yHelper.Initialize ();
+		}
+
 		/// <summary>
 		///   Creates a new Loader for a XAML file.
 		/// </summary>
Index: class/System.Windows/Makefile.am
===================================================================
--- class/System.Windows/Makefile.am	(revision 136130)
+++ class/System.Windows/Makefile.am	(working copy)
@@ -19,6 +19,12 @@
 
 CSCFLAGS = /codepage:65001 -d:SANITY -d:NET_1_1 -d:NET_2_0 -d:MOONLIGHT -debug+ -noconfig -r:System -r:System.Core -r:System.Xml -d:AGCLR -unsafe
 
+## this hack will be dropped once we get this working:
+## http://www.mono-project.com/Moonlight/SecurityStatus#Assembly_Loading
+#ifdef MOON_A11Y_INTERNAL_HACK
+CSCFLAGS += -define:MOON_A11Y_INTERNAL_HACK
+#endif
+
 GMCS = gmcs $(CSCFLAGS) -lib:../lib/moonlight -d:NET_3_0
 SMCS = MONO_PATH="../lib/2.1:$$MONO_PATH" mono --runtime=moonlight --security=temporary-smcs-hack ../lib/2.1/smcs.exe -r:System.Net $(CSCFLAGS)
 GACUTIL = gacutil /gacdir $(DESTDIR)$(prefix)/lib /root $(DESTDIR)$(prefix)/lib
@@ -38,6 +44,7 @@
 	$(srcdir)/MS.Internal/Dummy.cs	\
 	$(srcdir)/System.Windows.Hosting/Dummy.cs	\
 	$(srcdir)/System.IO/SimpleUnmanagedMemoryStream.cs			\
+	$(srcdir)/Mono/A11yHelper.cs						\
 	$(srcdir)/Mono/ApplicationLauncher.cs					\
 	$(srcdir)/Mono/DispatcherTimer.cs					\
 	$(srcdir)/Mono/EasingFunctionWrapper.cs					\
