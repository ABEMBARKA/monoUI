// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.HBox hbox1;
    
    private Gtk.Label label1;
    
    private Gtk.Button button188;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("MainWindow");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.hbox1 = new Gtk.HBox();
        this.hbox1.Name = "hbox1";
        this.hbox1.Spacing = 6;
        // Container child hbox1.Gtk.Box+BoxChild
        this.label1 = new Gtk.Label();
        this.label1.Name = "label1";
        this.label1.LabelProp = Mono.Unix.Catalog.GetString("label1");
        this.hbox1.Add(this.label1);
        Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.hbox1[this.label1]));
        w1.Position = 0;
        w1.Expand = false;
        w1.Fill = false;
        // Container child hbox1.Gtk.Box+BoxChild
        this.button188 = new Gtk.Button();
        this.button188.CanFocus = true;
        this.button188.Name = "button188";
        this.button188.UseUnderline = true;
        this.button188.Label = Mono.Unix.Catalog.GetString("button188");
        this.hbox1.Add(this.button188);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.button188]));
        w2.Position = 1;
        w2.Expand = false;
        w2.Fill = false;
        this.Add(this.hbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 400;
        this.DefaultHeight = 300;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
    }
}
