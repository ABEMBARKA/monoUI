Index: class/Managed.Windows.Forms/System.Windows.Forms/X11DesktopColors.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/X11DesktopColors.cs	(revision 101287)
+++ class/Managed.Windows.Forms/System.Windows.Forms/X11DesktopColors.cs	(working copy)
@@ -28,6 +28,7 @@
 using System.Drawing;
 using System.Runtime.InteropServices;
 using System.IO;
+using System;
 
 namespace System.Windows.Forms {
 	internal class X11DesktopColors {
@@ -86,6 +87,7 @@
 
 		#region Constructors
 		static X11DesktopColors() {
+			
 			FindDesktopEnvironment();
 			
 			switch(desktop) {
@@ -97,7 +99,7 @@
 					GtkStyleStruct	style;
 
 					try {
-						gtk_init_check (IntPtr.Zero, IntPtr.Zero);
+						GtkInit();
 						//dispmgr =  gdk_display_manager_get ();
 						//gdkdisplay =  gdk_display_manager_get_default_display (dispmgr);
 
@@ -145,6 +147,27 @@
 				}
 			}
 		}
+
+		static void GtkInit ()
+		{
+//no SetEnv in 1.x
+#if NET_2_0
+			// Prevent ATK bridge initalization, as it causes
+			// conflicts with the UIA<->ATK bridge.
+			// A better solution would probably be to get these
+			// values out-of-process.  See details/discussion here:
+			// https://bugzilla.novell.com/show_bug.cgi?id=375987
+			string dangerousEnvVar = "GTK_MODULES";
+			string gtkModulesEnvVarContent = Environment.GetEnvironmentVariable (dangerousEnvVar);
+			Environment.SetEnvironmentVariable (dangerousEnvVar, string.Empty);
+#endif
+
+			gtk_init_check (IntPtr.Zero, IntPtr.Zero);
+
+#if NET_2_0
+			Environment.SetEnvironmentVariable (dangerousEnvVar, gtkModulesEnvVarContent);
+#endif
+		}
 		#endregion	// Constructors
 
 		#region Properties
Index: class/Managed.Windows.Forms/System.Windows.Forms/Application.cs
===================================================================
--- class/Managed.Windows.Forms/System.Windows.Forms/Application.cs	(revision 103581)
+++ class/Managed.Windows.Forms/System.Windows.Forms/Application.cs	(working copy)
@@ -154,10 +154,42 @@
 #endif
 		private static VisualStyleState visual_style_state = VisualStyleState.ClientAndNonClientAreasEnabled;
 
+		private const string UIAutomationWinformsAssembly =
+			"UIAutomationWinforms, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f4ceacb585d99812";
+		private const string UIAFormListenerType =
+			"Mono.UIAutomation.Winforms.FormListener";
+		private const string UIAFormListnerInitializeMethod =
+			"Initialize";
+  
 		private Application ()
 		{
 		}
 
+		// TODO: Any #if checks required here?
+		static Application ()
+		{
+			// TODO: Check if accessibility is turned on first
+			Assembly mwfProviders = null;
+			try {
+				mwfProviders =
+					Assembly.Load (UIAutomationWinformsAssembly);
+			} catch { }
+			
+			if (mwfProviders != null) {
+				// TODO: Need try/catch checks here because of
+				//       uiawinforms loading other assemblies
+				Type listenerType =
+					mwfProviders.GetType (UIAFormListenerType, false);
+				if (listenerType != null) {
+					MethodInfo initMethod =
+						listenerType.GetMethod (UIAFormListnerInitializeMethod, BindingFlags.Static | BindingFlags.Public);
+					if (initMethod != null) {
+						initMethod.Invoke (null, new object [] {});
+					}
+				}
+			}
+		}
+
 		#region Private Methods
 
 		internal static void CloseForms (Thread thread)
@@ -681,9 +713,13 @@
 		{
 			Run (new ApplicationContext (mainForm));
 		}
+		
+		internal static event EventHandler PreRun;
 
 		public static void Run (ApplicationContext context)
 		{
+			if (PreRun != null)
+				PreRun (null, new EventArgs ());
 #if NET_2_0
 			// If a sync context hasn't been created by now, create
 			// a default one
@@ -974,6 +1010,8 @@
 
 		public static event EventHandler ThreadExit;
 		public static event ThreadExceptionEventHandler ThreadException;
+		
+		internal static event EventHandler FormAdded;
 
 #if NET_2_0
 		[EditorBrowsable (EditorBrowsableState.Advanced)]
@@ -1009,6 +1047,8 @@
 		{
 			lock (forms)
 				forms.Add (f);
+			if (FormAdded != null)
+				FormAdded (f, null);
 		}
 		
 		internal static void RemoveForm (Form f)
